name: Library Release Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  GITHUB_USERNAME: "anything"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
  ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
  ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY_CONTENTS }}
  ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
  ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}

jobs:

  gradle-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Gradle Cache Setup
        uses: gradle/gradle-build-action@v2.4.2
      - name: Gradle Check
        run: ./gradlew check

  deploy-multiplatform:
    runs-on: ubuntu-latest
    needs:
      - gradle-check
    outputs:
      release_version: ${{ steps.output_version.outputs.release_version }}
    steps:
      - uses: actions/checkout@v3
      - name: Gradle Cache Setup
        uses: gradle/gradle-build-action@v2.4.2
      - name: Gradle Sync
        run: ./gradlew
      - name: Add Sdk Version to Env
        run: |
          release_version=$(./gradlew printVersion --no-configuration-cache -q)
          echo "release_version=$release_version" >> $GITHUB_ENV
      - name: Publish ${{ env.release_version }}
        run: ./gradlew publishKotlinMultiplatformPublicationToMavenCentralRepository --no-configuration-cache
      - name: Add Sdk Version to Output
        id: output_version
        run: echo "release_version=${{ env.release_version }}" >> $GITHUB_OUTPUT

  deploy-jvm:
    runs-on: ubuntu-latest
    needs:
      - gradle-check
    steps:
      - uses: actions/checkout@v3
      - name: Gradle Cache Setup
        uses: gradle/gradle-build-action@v2.4.2
      - name: Gradle Sync
        run: ./gradlew
      - name: Add Sdk Version to Env
        run: |
          release_version=$(./gradlew printVersion --no-configuration-cache --no-configuration-cache -q)
          echo "release_version=$release_version" >> $GITHUB_ENV
      - name: Publish ${{ env.release_version }}
        run: ./gradlew publishJvmPublicationToMavenCentralRepository --no-configuration-cache

  # Uncomment when new platforms needed
  # deploy-js:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - test-jvm
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Gradle Cache Setup
  #       uses: gradle/gradle-build-action@v2.4.2
  #     - name: Gradle Sync
  #       run: ./gradlew
  #     - name: Add Sdk Version to Env
  #       run: |
  #         release_version=$(./gradlew printVersion --no-configuration-cache -q)
  #         echo "release_version=$release_version" >> $GITHUB_ENV
  #     - name: Publish ${{ env.release_version }}
  #       run: ./gradlew publishJsPublicationToMavenCentralRepository --no-configuration-cache
  #
  # deploy-ios-x64:
  #   runs-on: macos-latest
  #   needs:
  #     - test-jvm
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Gradle Cache Setup
  #       uses: gradle/gradle-build-action@v2.4.2
  #     - name: Konan Cache Setup
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.konan
  #         key: konan-cache
  #     - name: Gradle Sync
  #       run: ./gradlew
  #     - name: Add Sdk Version to Env
  #       run: |
  #         release_version=$(./gradlew printVersion --no-configuration-cache -q)
  #         echo "release_version=$release_version" >> $GITHUB_ENV
  #     - name: Publish ${{ env.release_version }}
  #       run: ./gradlew publishIosX64PublicationToMavenCentralRepository --no-configuration-cache
  #
  # deploy-ios-arm64:
  #   runs-on: macos-latest
  #   needs:
  #     - test-jvm
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Gradle Cache Setup
  #       uses: gradle/gradle-build-action@v2.4.2
  #     - name: Konan Cache Setup
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.konan
  #         key: konan-cache
  #     - name: Gradle Sync
  #       run: ./gradlew
  #     - name: Add Sdk Version to Env
  #       run: |
  #         release_version=$(./gradlew printVersion --no-configuration-cache -q)
  #         echo "release_version=$release_version" >> $GITHUB_ENV
  #     - name: Publish ${{ env.release_version }}
  #       run: ./gradlew publishIosArm64PublicationToMavenCentralRepository --no-configuration-cache
  #
  # deploy-ios-simulator-arm64:
  #   runs-on: macos-latest
  #   needs:
  #     - test-jvm
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Gradle Cache Setup
  #       uses: gradle/gradle-build-action@v2.4.2
  #     - name: Konan Cache Setup
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.konan
  #         key: konan-cache
  #     - name: Gradle Sync
  #       run: ./gradlew
  #     - name: Add Sdk Version to Env
  #       run: |
  #         release_version=$(./gradlew printVersion --no-configuration-cache -q)
  #         echo "release_version=$release_version" >> $GITHUB_ENV
  #     - name: Publish ${{ env.release_version }}
  #       run: ./gradlew publishIosSimulatorArm64PublicationToMavenCentralRepository --no-configuration-cache

  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - deploy-multiplatform
      - deploy-jvm
      # Uncomment when new platforms needed
      # - deploy-js
      # - deploy-ios-x64
      # - deploy-ios-arm64
      # - deploy-ios-simulator-arm64
    steps:
      - uses: actions/checkout@v3
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.deploy-multiplatform.outputs.release_version }}
          name: Release ${{ needs.deploy-multiplatform.outputs.release_version }}
